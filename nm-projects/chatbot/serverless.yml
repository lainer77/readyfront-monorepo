service: chatbot

provider:
    name: aws
    runtime: nodejs18.x
    stage: dev
    region: ap-northeast-2

functions:
    expressApp:
        handler: express-app/server.handler
        environment:
            OPENAI_API_KEY: ${env:OPENAI_API_KEY}
            ALLOWED_HOST: chatbot.readyfront.co.kr
        events:
            - http:
                  path: /
                  method: any
            - http:
                  path: '{proxy+}'
                  method: any
plugins:
    - serverless-offline
    - serverless-wsgi
    - serverless-python-requirements
    - serverless-plugin-include-dependencies
custom:
    serverless-offline:
        noPrependStageInUrl: true
        printOutput: true
        prefix: ''
    pythonRequirements:
        dockerizePip: non-linux # 비 리눅스 환경에서도 도커를 사용하여 패키징
    wsgi:
        app: flask-app/app.app # 앱 위치 및 Flask 앱 변수 이름
        packRequirements: false
    cloudfrontInvalidate:
        distributionIdKey: ${env:CLOUDFRONT_DISTRIBUTION_ID}  # CloudFormation에서 CloudFront 배포 ID의 키 이름
        items: ["/*"]  # 모든 캐시 항목을 무효화

package:
    include:
        - express-app/**
        - express-app/node_modules/**
        - flask-app/** 
    exclude:
        - .envrc
        - README.md
        - package.json
        - sentence_transformer_layer
        - serverless-flask.yml
        - _serverless.yml
    
